{"ast":null,"code":"import dayjs from 'dayjs';\n/**\r\n * Formats date string.\r\n * @param isoDate Date in ISO8601 format\r\n * @param formatStr Format string. Defaults to DD/MM/YYYY.\r\n * @returns Formatted date\r\n */\n\nexport const formatDate = function (isoDate) {\n  let formatStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'DD/MM/YYYY';\n  return dayjs(isoDate).format(formatStr);\n};\n/**\r\n * Determines if the due date for the semester is passed or not.\r\n * @param endDate End date for the semester.\r\n * @param progress Progress percentage. Use whole number.\r\n */\n\nexport const isOverDue = (endDate, progress) => {\n  const now = dayjs();\n  const end = dayjs(endDate);\n  return now.isAfter(end) && progress !== 100;\n};","map":{"version":3,"sources":["D:/Office/Project/www/nginx/html/Personal-Projects/portfolio-app/src/utils/datetime.ts"],"names":["dayjs","formatDate","isoDate","formatStr","format","isOverDue","endDate","progress","now","end","isAfter"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,UAACC,OAAD,EAA+C;AAAA,MAA7BC,SAA6B,uEAAjB,YAAiB;AACvE,SAAOH,KAAK,CAACE,OAAD,CAAL,CAAeE,MAAf,CAAsBD,SAAtB,CAAP;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,SAAS,GAAG,CAACC,OAAD,EAAkBC,QAAlB,KAAgD;AACvE,QAAMC,GAAG,GAAGR,KAAK,EAAjB;AACA,QAAMS,GAAG,GAAGT,KAAK,CAACM,OAAD,CAAjB;AACA,SAAOE,GAAG,CAACE,OAAJ,CAAYD,GAAZ,KAAoBF,QAAQ,KAAK,GAAxC;AACD,CAJM","sourcesContent":["import dayjs from 'dayjs';\r\n\r\n/**\r\n * Formats date string.\r\n * @param isoDate Date in ISO8601 format\r\n * @param formatStr Format string. Defaults to DD/MM/YYYY.\r\n * @returns Formatted date\r\n */\r\nexport const formatDate = (isoDate: string, formatStr = 'DD/MM/YYYY') => {\r\n  return dayjs(isoDate).format(formatStr);\r\n};\r\n\r\n/**\r\n * Determines if the due date for the semester is passed or not.\r\n * @param endDate End date for the semester.\r\n * @param progress Progress percentage. Use whole number.\r\n */\r\nexport const isOverDue = (endDate: string, progress: number): boolean => {\r\n  const now = dayjs();\r\n  const end = dayjs(endDate);\r\n  return now.isAfter(end) && progress !== 100;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}